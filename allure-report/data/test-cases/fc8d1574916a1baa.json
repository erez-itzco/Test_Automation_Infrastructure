{"uid":"fc8d1574916a1baa","name":"Test02: Add and Verify New Tasks","fullName":"test_cases.test_electron.Test_Electron#test_add_and_verify_new_tasks","historyId":"2cec880a72215d6cdecf3a6182e4b88a","time":{"start":1750430333688,"stop":1750430334068,"duration":380},"description":"This test adds a new tasks and verifies it in the list of tasks","descriptionHtml":"<p>This test adds a new tasks and verifies it in the list of tasks</p>\n","status":"failed","statusMessage":"AssertionError: Verify equals failed, Actual: 3 is not equals to expected: 2","statusTrace":"self = <test_cases.test_electron.Test_Electron object at 0x000001AFC2DC5960>\n\n    @allure.title('Test02: Add and Verify New Tasks')\n    @allure.description('This test adds a new tasks and verifies it in the list of tasks')\n    def test_add_and_verify_new_tasks(self):\n        ElectronFlows.add_new_task_flow('Learn Playwright')\n        ElectronFlows.add_new_task_flow('Learn JS')\n        ElectronFlows.add_new_task_flow('Learn C++')\n>       Verifications.verify_equals(ElectronFlows.get_number_of_tasks_flow(), 2)\n\ntest_cases\\test_electron.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 3, expected = 2\n\n    @staticmethod\n    @allure.step('verify equals')\n    def verify_equals(actual, expected):\n>       assert actual == expected, 'Verify equals failed, Actual: ' + str(actual) + ' is not equals to expected: ' + str(expected)\nE       AssertionError: Verify equals failed, Actual: 3 is not equals to expected: 2\n\nextentions\\verifications.py:10: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_electron_driver","time":{"start":1750430324802,"stop":1750430331159,"duration":6357},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_xunit_setup_method_fixture_Test_Electron","time":{"start":1750430333688,"stop":1750430333688,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"This test adds a new tasks and verifies it in the list of tasks","status":"failed","statusMessage":"AssertionError: Verify equals failed, Actual: 3 is not equals to expected: 2","statusTrace":"self = <test_cases.test_electron.Test_Electron object at 0x000001AFC2DC5960>\n\n    @allure.title('Test02: Add and Verify New Tasks')\n    @allure.description('This test adds a new tasks and verifies it in the list of tasks')\n    def test_add_and_verify_new_tasks(self):\n        ElectronFlows.add_new_task_flow('Learn Playwright')\n        ElectronFlows.add_new_task_flow('Learn JS')\n        ElectronFlows.add_new_task_flow('Learn C++')\n>       Verifications.verify_equals(ElectronFlows.get_number_of_tasks_flow(), 2)\n\ntest_cases\\test_electron.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 3, expected = 2\n\n    @staticmethod\n    @allure.step('verify equals')\n    def verify_equals(actual, expected):\n>       assert actual == expected, 'Verify equals failed, Actual: ' + str(actual) + ' is not equals to expected: ' + str(expected)\nE       AssertionError: Verify equals failed, Actual: 3 is not equals to expected: 2\n\nextentions\\verifications.py:10: AssertionError","steps":[{"name":"Add new task flow","time":{"start":1750430333689,"stop":1750430333829,"duration":140},"status":"passed","steps":[{"name":"updating text","time":{"start":1750430333698,"stop":1750430333792,"duration":94},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-1\")>"},{"name":"value","value":"'Learn Playwright'"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"updating text","time":{"start":1750430333798,"stop":1750430333829,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-1\")>"},{"name":"value","value":"''"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"task_name","value":"'Learn Playwright'"}],"stepsCount":2,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new task flow","time":{"start":1750430333829,"stop":1750430333922,"duration":93},"status":"passed","steps":[{"name":"updating text","time":{"start":1750430333838,"stop":1750430333888,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-1\")>"},{"name":"value","value":"'Learn JS'"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"updating text","time":{"start":1750430333896,"stop":1750430333922,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-1\")>"},{"name":"value","value":"''"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"task_name","value":"'Learn JS'"}],"stepsCount":2,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add new task flow","time":{"start":1750430333922,"stop":1750430334054,"duration":132},"status":"passed","steps":[{"name":"updating text","time":{"start":1750430333931,"stop":1750430333991,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-1\")>"},{"name":"value","value":"'Learn C++'"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"updating text","time":{"start":1750430333999,"stop":1750430334054,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-1\")>"},{"name":"value","value":"''"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"task_name","value":"'Learn C++'"}],"stepsCount":2,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Get number of tasks flow","time":{"start":1750430334054,"stop":1750430334066,"duration":12},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"verify equals","time":{"start":1750430334066,"stop":1750430334066,"duration":0},"status":"failed","statusMessage":"AssertionError: Verify equals failed, Actual: 3 is not equals to expected: 2\n","statusTrace":"  File \"C:\\Automation\\test_automation_infrastructure\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"C:\\Automation\\test_automation_infrastructure\\extentions\\verifications.py\", line 10, in verify_equals\n    assert actual == expected, 'Verify equals failed, Actual: ' + str(actual) + ' is not equals to expected: ' + str(expected)\n","steps":[],"attachments":[],"parameters":[{"name":"actual","value":"3"},{"name":"expected","value":"2"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"e021ff4d1ce78c2c","name":"615eac38-0b59-4d69-a043-c4a3a4b611f5-attachment.png","source":"e021ff4d1ce78c2c.png","type":"image/png","size":29030}],"parameters":[],"stepsCount":11,"attachmentStep":false,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_Test_Electron::0","time":{"start":1750430334596,"stop":1750430336353,"duration":1757},"status":"passed","steps":[{"name":"Empty task from list flow","time":{"start":1750430334596,"stop":1750430336353,"duration":1757},"status":"passed","steps":[{"name":"Get number of tasks flow","time":{"start":1750430334596,"stop":1750430334603,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"mouse over tooltip","time":{"start":1750430335138,"stop":1750430335216,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-7\")>"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"mouse over tooltip","time":{"start":1750430335739,"stop":1750430335791,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-7\")>"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"mouse over tooltip","time":{"start":1750430336314,"stop":1750430336353,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"elem","value":"<selenium.webdriver.remote.webelement.WebElement (session=\"b564bf5c6bccd85cae5d6b0182f7d80d\", element=\"0.021729636074938163-7\")>"}],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":4,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"init_electron_driver::0","time":{"start":1750430336355,"stop":1750430340463,"duration":4108},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_electron_driver')"},{"name":"parentSuite","value":"test_cases"},{"name":"suite","value":"test_electron"},{"name":"subSuite","value":"Test_Electron"},{"name":"host","value":"Erez"},{"name":"thread","value":"18720-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_cases.test_electron"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init_electron_driver')"]},"source":"fc8d1574916a1baa.json","parameterValues":[]}